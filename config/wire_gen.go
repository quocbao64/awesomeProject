// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"awesomeProject/internal/app/controller"
	"awesomeProject/internal/app/repository"
	"awesomeProject/internal/app/service"
	"github.com/google/wire"
)

// Injectors from injector.go:

func Init() *Initialize {
	gormDB := ConnectDB()
	customerRepositoryImpl := repository.CustomerRepositoryInit(gormDB)
	customerServiceImpl := service.CustomerServiceInit(customerRepositoryImpl)
	customerControllerImpl := controller.CustomerControllerInit(customerServiceImpl)
	authServiceImpl := service.AuthServiceInit(customerRepositoryImpl)
	authControllerImpl := controller.AuthControllerInit(authServiceImpl)
	categoryRepositoryImpl := repository.CategoryRepositoryInit(gormDB)
	categoryServiceImpl := service.CategoryServiceInit(categoryRepositoryImpl)
	categoryControllerImpl := controller.CategoryControllerInit(categoryServiceImpl)
	productRepositoryImpl := repository.ProductRepositoryInit(gormDB)
	productServiceImpl := service.ProductServiceInit(productRepositoryImpl)
	productControllerImpl := controller.ProductControllerInit(productServiceImpl)
	initialize := NewInitialize(customerRepositoryImpl, customerServiceImpl, customerControllerImpl, authControllerImpl, authServiceImpl, categoryRepositoryImpl, categoryServiceImpl, categoryControllerImpl, productRepositoryImpl, productServiceImpl, productControllerImpl)
	return initialize
}

// injector.go:

var db = wire.NewSet(ConnectDB)

var customerSvcSet = wire.NewSet(service.CustomerServiceInit, wire.Bind(new(service.CustomerService), new(*service.CustomerServiceImpl)))

var customerRepoSet = wire.NewSet(repository.CustomerRepositoryInit, wire.Bind(new(repository.CustomerRepository), new(*repository.CustomerRepositoryImpl)))

var customerCtrlSet = wire.NewSet(controller.CustomerControllerInit, wire.Bind(new(controller.CustomerController), new(*controller.CustomerControllerImpl)))

var authSvcSet = wire.NewSet(service.AuthServiceInit, wire.Bind(new(service.AuthService), new(*service.AuthServiceImpl)))

var authCtrlSet = wire.NewSet(controller.AuthControllerInit, wire.Bind(new(controller.AuthController), new(*controller.AuthControllerImpl)))

var categorySvcSet = wire.NewSet(service.CategoryServiceInit, wire.Bind(new(service.CategoryService), new(*service.CategoryServiceImpl)))

var categoryRepoSet = wire.NewSet(repository.CategoryRepositoryInit, wire.Bind(new(repository.CategoryRepository), new(*repository.CategoryRepositoryImpl)))

var categoryCtrlSet = wire.NewSet(controller.CategoryControllerInit, wire.Bind(new(controller.CategoryController), new(*controller.CategoryControllerImpl)))

var productSvcSet = wire.NewSet(service.ProductServiceInit, wire.Bind(new(service.ProductService), new(*service.ProductServiceImpl)))

var productRepoSet = wire.NewSet(repository.ProductRepositoryInit, wire.Bind(new(repository.ProductRepository), new(*repository.ProductRepositoryImpl)))

var productCtrlSet = wire.NewSet(controller.ProductControllerInit, wire.Bind(new(controller.ProductController), new(*controller.ProductControllerImpl)))
